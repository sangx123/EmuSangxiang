apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'packer'

// 添加插件
apply plugin: 'com.mob.sdk'

// 在MobSDK的扩展中注册SMSSDK的相关信息
MobSDK {
    appKey "29f87471998a1"
    appSecret "82fc3afaca5c668782083aa155af9e6a"
    SMSSDK {}
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.xiang.one"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        flavorDimensions "versionCode"
    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            keyAlias 'emucoo'
            keyPassword 'emucoo'
            storeFile file('../certificates/emucoo_key_v1.jks')
            storePassword 'emucoo'
            v2SigningEnabled true
            v1SigningEnabled true
        }
        debug {
            keyAlias 'emucoo'
            keyPassword 'emucoo'
            storeFile file('../certificates/emucoo_key_v1.jks')
            storePassword 'emucoo'
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            useProguard true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "jinkens_app", System.getenv("jinkens_app") ?: ""

        }
        debug {
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            resValue "string", "jinkens_app", System.getenv("jinkens_app") ?: ""
        }
    }

    lintOptions {
        abortOnError false
    }
    productFlavors {

        /*开发*/
        DEV {

            buildConfigField("String", "HOST_URL", "\"http://188.131.235.188:8081/\"")
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.xiang.one",
                    JPUSH_APPKEY : "405c44ca84474b072b8c4da5", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]

        }
        /*生产*/
        PRO {
            buildConfigField("String", "HOST_URL", "\"http://188.131.235.188:8081/\"")
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.xiang.one",
                    JPUSH_APPKEY : "c2d3f4af06f5047b61c5be82", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "emucoo-v${variant.mergedFlavor.versionName}-${variant.buildType.name}.apk".replaceAll("/", "-")
        }
    }
}

androidExtensions {
    experimental = true
}


kapt {
    arguments {
        arg('eventBusIndex', 'com.xiang.one.EmucooEventBusIndex')
        arg("objectbox.debug", true)
    }
}

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //testImplementation 'junit:junit:4.12'
    implementation rootProject.ext.kotlin_reflect

    //testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    //testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    //androidTestImplementation 'com.android.support.test:runner:1.0.2'

    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //引入anko
    implementation rootProject.ext.kotlin_stdlib_jdk7
    implementation rootProject.ext.anko_commons

    // Anko Layouts
    implementation rootProject.ext.constraint
    implementation rootProject.ext.supportV4
    implementation rootProject.ext.recyclerviewV7
    implementation rootProject.ext.anko_sdk25

    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation rootProject.ext.anko_appcompat_v7

    // Coroutine listeners for Anko Layouts
    implementation rootProject.ext.anko_sdk25_coroutines
    implementation rootProject.ext.anko_appcompat_v7_coroutines

    // Anko SQLite

    //implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    //androidTestImplementation 'com.android.support.test:runner:1.0.1'

    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation rootProject.ext.supportAppCompat
    implementation rootProject.ext.supportV4
    implementation rootProject.ext.supportDesign
    implementation rootProject.ext.supportCardView
    implementation rootProject.ext.recyclerviewV7
    implementation rootProject.ext.supportConstraintLayout
    implementation rootProject.ext.rxbinding_kotlin
    implementation rootProject.ext.rxbinding_support_v4_kotlin
    implementation rootProject.ext.rxbinding_appcompat_v7_kotlin
    implementation rootProject.ext.rxbinding_recyclerview_v7_kotlin
    implementation rootProject.ext.rxbinding_leanback_v17_kotlin

    // add library
    //implementation project(':ImagePicker')

    //implementation project(':IMLib')

    //implementation project(':IMKit')
    implementation project(':MPChartLib')

    //implementation project(':Picasso')

    //implementation project(':Graffiti')

    //implementation project(':MaterialCalendar')
    implementation project(':WheelView')

    //implementation project(':boommenu')

    //implementation project(':MaterialDrawer')
    implementation rootProject.ext.multidex

    //eventbus
    implementation rootProject.ext.eventbus
    kapt rootProject.ext.eventbus_annotation_processor

    // Retrofit库
    implementation rootProject.ext.rxjava
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.okhttp3_logging_interceptor
    implementation rootProject.ext.adapter_rxjava2
    implementation rootProject.ext.converter_gson
    implementation rootProject.ext.rxandroid
    implementation rootProject.ext.gson
    implementation rootProject.ext.threetenabp
    debugImplementation rootProject.ext.objectbox_android_objectbrowser
    releaseImplementation rootProject.ext.objectbox_android
    kapt rootProject.ext.objectbox_processor
    implementation rootProject.ext.bugly

    //jpush
    implementation rootProject.ext.jpush
    implementation rootProject.ext.jcore

    //自动更新
    implementation rootProject.ext.update_app

    //BaseRecyclerViewAdapterHelper
    implementation rootProject.ext.BaseRecyclerViewAdapterHelper

    //rxpermissions
    implementation rootProject.ext.rxpermissions

    //switchbutton
    implementation rootProject.ext.switchbutton

    //packer
    implementation rootProject.ext.packer

    //阿里热更新
    implementation rootProject.ext.hotfix

    //shareperference
    implementation rootProject.ext.hawk

    //新增广告轮播组件
    implementation rootProject.ext.bga_banner

    //glide
    implementation rootProject.ext.glide
    annotationProcessor rootProject.ext.glide_compiler

    //jsbridge
    implementation rootProject.ext.jsbridge

    //全面屏适配
    implementation rootProject.ext.immersionbar
}
apply plugin: 'io.objectbox'
//在正常的dependencies中添加如下依赖
dependencies {
//主要是针对kotlin
    implementation rootProject.ext.objectbox_kotlin
}
